/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interface;

import Controller.Controller;
import Objects.ApplianceCategory;
import Objects.Client;
import Objects.Appliance;
import Objects.Employee;
import Objects.Bill;
import Objects.Branch;
import javax.swing.JOptionPane;

/**
 *
 */
public class VSolicitarInactivacion extends javax.swing.JFrame {

    public Controller controlador;
    public TipoSolicitud solicitud;
    
    public VSolicitarInactivacion(Controller controlador, TipoSolicitud solicitud) {
        this.controlador = controlador;
        this.solicitud = solicitud;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnDesactivar = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        lblMain1 = new javax.swing.JLabel();
        lblMain2 = new javax.swing.JLabel();
        inptNombre = new javax.swing.JTextField();
        lblMain3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnDesactivar.setText("Desactivar");
        btnDesactivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesactivarActionPerformed(evt);
            }
        });

        btnCerrar.setText("Cancelar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        lblMain1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMain1.setText("Para desactivar clientes o empleados, ingrese el nombre de usuario.");

        lblMain2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMain2.setText("Para desactivar facturas o electrodomésticos, ingrese la descripción.");

        lblMain3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMain3.setText("Para desactivar sucursales o categorías de electrodomésticos, ingrese el nombre.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblMain2, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblMain1, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnDesactivar)
                .addGap(99, 99, 99)
                .addComponent(btnCerrar)
                .addGap(178, 178, 178))
            .addGroup(layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addComponent(inptNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblMain3, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(lblMain2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMain3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMain1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inptNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDesactivar)
                    .addComponent(btnCerrar))
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDesactivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesactivarActionPerformed
        String nickname = inptNombre.getText();

        switch(solicitud){
            case EMPLEADO:
                Employee empleado = controlador.consultarEmpleado(nickname);
                if (empleado != null){
                    if (controlador.inactivarEmpleado(empleado)){
                        JOptionPane.showMessageDialog(this, "Empleado desactivado con éxito.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                    }else{
                        JOptionPane.showMessageDialog(this, "No fue posible desactivar el empleado. Puede deberse a que pertenece a algún catálogo.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "El nombre de usuario que mencionó no se encontró.", "Error", JOptionPane.ERROR_MESSAGE);
                }
                break;
            case CLIENTE:
                Client cliente = controlador.consultarCliente(nickname);
                if (cliente != null){
                    if (controlador.inactivarCliente(cliente)){
                        JOptionPane.showMessageDialog(this, "Cliente desactivado con éxito.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                    }else{
                        JOptionPane.showMessageDialog(this, "No fue posible desactivar el cliente. Puede deberse a que pertenece a algún catálogo.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "El nombre de usuario que mencionó no se encontró.", "Error", JOptionPane.ERROR_MESSAGE);
                }
                break;
            case SUCURSAL:
                Branch sucursal = controlador.consultarSucursal(nickname);
                if (sucursal != null){
                    if (controlador.inactivarSucursal(sucursal)){
                        JOptionPane.showMessageDialog(this, "Sucursal desactivada con éxito.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                    }else{
                        JOptionPane.showMessageDialog(this, "No fue posible desactivar la sucursal. Puede deberse a que pertenece a algún catálogo.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "El nombre que mencionó no se encontró.", "Error", JOptionPane.ERROR_MESSAGE);
                }
                break;
            case CATELECTRODOMESTICO:
                ApplianceCategory categoriaElectrodomestico = controlador.consultarCategoriaElectrodomestico(nickname);
                if (categoriaElectrodomestico != null){
                    if (controlador.inactivarCategoriaElectrodomestico(categoriaElectrodomestico)){
                        JOptionPane.showMessageDialog(this, "Categoría de electrodoméstico desactivada con éxito.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                    }else{
                        JOptionPane.showMessageDialog(this, "No fue posible desactivar la categoría de electrodoméstico. Puede deberse a que pertenece a algún catálogo.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "El nombre que mencionó no se encontró.", "Error", JOptionPane.ERROR_MESSAGE);
                }
                break;
            case ELECTRODOMESTICO:
                Appliance electrodomestico = controlador.consultarElectrodomestico(nickname);
                if (electrodomestico != null){
                    if (controlador.inactivarElectrodomestico(electrodomestico)){
                        JOptionPane.showMessageDialog(this, "Electrodoméstico desactivado con éxito.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                    }else{
                        JOptionPane.showMessageDialog(this, "No fue posible desactivar el electrodoméstico. Puede deberse a que pertenece a algún catálogo.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "La descripción que mencionó no se encontró.", "Error", JOptionPane.ERROR_MESSAGE);
                }
                break;
            case FACTURACION:
                Bill factura = controlador.consultarFactura(nickname);
                if (factura != null){
                    if (controlador.inactivarFactura(factura)){
                        JOptionPane.showMessageDialog(this, "Factura anulada con éxito.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                    }else{
                        JOptionPane.showMessageDialog(this, "No fue posible anular la factura.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "La descripción que mencionó no se encontró.", "Error", JOptionPane.ERROR_MESSAGE);
                }
                break;

        }
        this.setVisible(false);
    }//GEN-LAST:event_btnDesactivarActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_btnCerrarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnDesactivar;
    private javax.swing.JTextField inptNombre;
    private javax.swing.JLabel lblMain1;
    private javax.swing.JLabel lblMain2;
    private javax.swing.JLabel lblMain3;
    // End of variables declaration//GEN-END:variables
}
